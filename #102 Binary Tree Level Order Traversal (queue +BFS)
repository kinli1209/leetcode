/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        
        if(root==NULL)
            return ans;
        
        queue<TreeNode*> my_queue;
        my_queue.push(root);
        
        
        while(my_queue.empty()!=true)
        {
            vector<int> temp;
            int size=my_queue.size();
            for (int i=0; i<size; i++)
            {
                  TreeNode* temp_node=my_queue.front();
                  my_queue.pop();
                  temp.push_back(temp_node->val);
                  if(temp_node->left)my_queue.push(temp_node->left);
                  if(temp_node->right)my_queue.push(temp_node->right);
            }

          
            ans.push_back(temp);
            
            
            
        }
        
        return ans;
        
    }
};
