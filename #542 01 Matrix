class Solution {
public:


    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
       
        int m=mat.size();
        int n=mat[0].size();
        vector<vector<int>> ans(m,vector<int>(n,0));
        vector<vector<int>> update(m,vector<int>(n,-1));
        vector<int> point(2,-1);
        queue<vector<int> > q;
        int dx[4],dy[4];
        int offset[5]={1,0,-1,0,1};
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                   if(mat[i][j]==0)
                   {
                       update[i][j]=0;
                       point[0]=i;
                       point[1]=j;
                       q.push(point);
                   }
            }    
        }
                                
        while(!q.empty())
        {
            vector<int> current;
            current=q.front();
            q.pop();
                                  
            for(int i=0;i<4;i++)
            {
                  int a=current[0]+offset[i];
                  int b=current[1]+offset[i+1];



                  if( a>=0 && a<m && b>=0 && b<n &&  (update[a][b]==-1))
                  {         
                
                            vector <int> temp(2,0);
                            temp[0]=a;
                            temp[1]=b; 
                            q.push(temp);
                            update[a][b]=update[current[0]][current[1]]+1;
                  }
            }                          

        }           

        return update;

    }
};
