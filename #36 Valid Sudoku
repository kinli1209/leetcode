class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        bool ans=true;
        
        unordered_map<char,int> row[9];
        unordered_map<char,int> col[9];
        unordered_map<char,int> box[9];
        
        for(int i=0;i<9;i++)
        {
             //row[0].insert(make_pair(board[i][0],0));
            for(int j=0;j<9;j++)
            {
                if(board[i][j]<='9'&&board[i][j]>='1')
                {
                    
                    //j 0->8
                  ans=row[i].insert(make_pair(board[i][j],0)).second;
                  if(ans==false)
                      return ans;
                   
                  ans=col[j].insert(make_pair(board[i][j],0)).second; 
                    if(ans==false)
                      return ans;
                 
                  ans=box[i/3+(j/3)*3].insert(make_pair(board[i][j],0)).second; 
                   if(ans==false)
                      return ans;
                    //0 1 2  box[1]  3 4 5  box[3]  0 1 2  i/3+(j/3)*3
                        // 0 1 2          0 1 2          3 4 5 (j/3)*3  
                }
                
                
            }
        }        
        return ans;
    }
};
