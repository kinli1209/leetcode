//recursive 遞迴 complexity O(2^n)
int Fibonacci(int n)
{
    if(n==0)
      return 0;
    else  if(n==1)
      return 1;
    else 
      return (Fibonacci(n-1))+ Fibonacci(n-2));
}


//iteration 疊代 complexity O(n)

int Fibonacci(int n)
{
   int pre1,pre2,item,i;
   if(n==0)
      return 0;
   else if(n==1)
      return 1;
   else
   {
      pre1=1
      pre2=0,
      for(i=2;i<=n;i++)
      { 
       item=pre1+pre2;
       pre2=pre1;
       pre1=item;
      }
      return item;
   }
}
