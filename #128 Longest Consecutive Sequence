class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        
        int maxlen=0;
        int len=0;
        int up=1;
        int down=1;
        int n=nums.size();
        if(n<=1)
            return n;
        
        unordered_map<int,int> mp;
        
        for(int i=0;i<n;i++)
        {
            mp[nums[i]]=10;
        }
        
        for(int i=0;i<n;i++)
        {
            len=0;
          
            up=1;
            down=1;

            while( mp.count(nums[i]) || mp.count(nums[i]+up) || mp.count(nums[i]-down)  )
            {
                 if(mp.count(nums[i]))
                 {
                     len++;
                  
                     mp.erase(nums[i]);
                 }
                
                if(mp.count(nums[i]+up))
                {
                    len++;
                    mp.erase(nums[i]+up);
                    up++;
                }
            
                if(mp.count(nums[i]-down))
                {
                    len++;
                    mp.erase(nums[i]-down);
                    down++;
                } 
                
               
            }
                
            
              maxlen=max(maxlen,len); 
            
             
        }
        
        
        return maxlen;
        
    }
};
