class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
    vector<int> ans;
    int start=-1;
    int end=-1;
    int size=nums.size();
    int left=0;
    int right=size-1;
    int mid=(left+right)/2;
    bool isfind=false;  
  
    
    if(size==1)
    {
        if(nums[0]==target)
        {
            start=0;
            end=0;
            
        }
        ans.push_back(start);
        ans.push_back(end);
        return ans;
    }
        
        
    while(left<=right)    
    {
       
        if(nums[mid]==target)
        {
         isfind=true;   
         break;
        }
       
        
        
        if(nums[mid]<target)
        {
            left=mid+1;
            mid=(right+right)/2;    
        }
        else if(nums[mid]>target)
        {
            right=mid-1;
            mid=(right+left)/2;  
        }
        
    }
        
    if(isfind==false)
    {
        ans.push_back(start);
        ans.push_back(end);
        return ans;
    }
            
    if(isfind==true)
    {
        start=mid;
        end=mid;
        while((start>0))
        {
            if(nums[start]!=nums[start-1])
            break;
            else
            start--;
        }
         while((end<size-1))
        {
           if(nums[end]!=nums[end+1])
            break;
            else
            end++;
        }    
        
       
        ans.push_back(start);
        ans.push_back(end);
        return ans;
    }
        
        return ans;
    }
};
