/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int ans = -INT_MAX; 
    int helper(TreeNode* node)
    {
        if(node==NULL)
        return 0;
        
        
        int left=helper(node->left);
        int right=helper(node->right);
        ans=max(ans,left+right);

            if(left>right)
            return left+1;
            else
            return right+1; 
        
    
    }
    int diameterOfBinaryTree(TreeNode* root) {
            
        if(root==NULL)
        return 0;
    
        helper(root);
        return ans;
           
    }
};
